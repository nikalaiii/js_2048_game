{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$table = document.querySelector(\".game-field\");\nvar $3d28d7f1aac198f5$var$tBody = $3d28d7f1aac198f5$var$table.querySelector(\"tbody\");\nvar $3d28d7f1aac198f5$var$rows = $3d28d7f1aac198f5$var$tBody.querySelectorAll(\"tr\");\nvar $3d28d7f1aac198f5$var$startButton = document.querySelector(\".start\");\nvar $3d28d7f1aac198f5$var$gameScore = document.querySelector(\".game-score\");\nvar $3d28d7f1aac198f5$var$restartButton = document.querySelector(\".restart\");\nvar $3d28d7f1aac198f5$var$startMessage = document.querySelector(\".message-start\");\nvar $3d28d7f1aac198f5$var$loseMessage = document.querySelector(\".message-lose\");\nvar $3d28d7f1aac198f5$var$winMessage = document.querySelector(\".message-win\");\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.state = initialState;\n        this.score = 0;\n        this.status = \"start\";\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                $3d28d7f1aac198f5$var$gameScore.textContent = this.score;\n                return this.score;\n            }\n        },\n        {\n            key: \"resetBoard\",\n            value: function resetBoard() {\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++)this.state[i][j] = 0;\n                this.score = 0;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = \"inProcess\";\n                this.resetBoard();\n                this.spawnCell();\n                this.spawnCell();\n                this.changeBoard();\n                document.removeEventListener(\"keydown\", this.handleKeyPress);\n                document.addEventListener(\"keydown\", this.handleKeyPress);\n                $3d28d7f1aac198f5$var$startButton.className = \"button restart\";\n                $3d28d7f1aac198f5$var$startButton.textContent = \"Restart\";\n                $3d28d7f1aac198f5$var$startMessage.remove();\n                $3d28d7f1aac198f5$var$winMessage.className = \"message message-win hidden\";\n                $3d28d7f1aac198f5$var$loseMessage.className = \"message message-min hidden\";\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                var _this = this;\n                $3d28d7f1aac198f5$var$restartButton.removeEventListener(\"click\", this.handleRestart);\n                this.handleRestart = function() {\n                    _this.resetBoard();\n                    _this.status = \"start\";\n                    $3d28d7f1aac198f5$var$winMessage.classList.add(\"hidden\");\n                    $3d28d7f1aac198f5$var$loseMessage.classList.add(\"hidden\");\n                    _this.start();\n                };\n                $3d28d7f1aac198f5$var$restartButton.addEventListener(\"click\", this.handleRestart);\n            }\n        },\n        {\n            key: \"isGameWin\",\n            value: function isGameWin() {\n                for(var i = 0; i < 4; i++){\n                    for(var j = 0; j < 4; j++)if (this.state[i][j] === 2048) {\n                        this.status = \"win\";\n                        $3d28d7f1aac198f5$var$winMessage.className = \"message message-win\";\n                    }\n                }\n            }\n        },\n        {\n            key: \"isGameOver\",\n            value: function isGameOver() {\n                var ansver = true;\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n                    if (this.state[i][j] === 0) ansver = false;\n                    if (i < 3 && this.state[i][j] === this.state[i + 1][j] || j < 3 && this.state[i][j] === this.state[i][j + 1]) ansver = false;\n                }\n                if (ansver === true) {\n                    this.status = \"lose\";\n                    $3d28d7f1aac198f5$var$loseMessage.className = \"message message-lose\";\n                }\n            }\n        },\n        {\n            key: \"handleKeyPress\",\n            value: function handleKeyPress(e) {\n                if (this.status === \"inProcess\") switch(e.key){\n                    case \"ArrowUp\":\n                        this.moveUp();\n                        break;\n                    case \"ArrowDown\":\n                        this.moveDown();\n                        break;\n                    case \"ArrowLeft\":\n                        this.moveLeft();\n                        break;\n                    case \"ArrowRight\":\n                        this.moveRight();\n                        break;\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this;\n                var previousState = JSON.stringify(this.state);\n                var newState = [\n                    0,\n                    1,\n                    2,\n                    3\n                ].map(function(col) {\n                    var column = _this.state.map(function(row) {\n                        return row[col];\n                    }).filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    for(var i = column.length - 1; i > 0; i--)if (column[i] === column[i - 1]) {\n                        column[i] *= 2;\n                        column[i - 1] = 0;\n                        _this.score += column[i];\n                    }\n                    var compressed = column.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(Array(4 - compressed.length).fill(0)).concat((0, $227c6742e0ff6f82$export$71511d61b312f219)(compressed));\n                });\n                this.state = [\n                    0,\n                    1,\n                    2,\n                    3\n                ].map(function(row) {\n                    return newState.map(function(col) {\n                        return col[row];\n                    });\n                });\n                if (JSON.stringify(this.state) !== previousState) this.spawnCell();\n                this.changeBoard();\n                this.isGameWin();\n                this.isGameOver();\n                this.getScore();\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                var previousState = JSON.stringify(this.state);\n                var newState = this.state.map(function(row) {\n                    var filtered = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    for(var i = 0; i < filtered.length - 1; i++)if (filtered[i] === filtered[i + 1]) {\n                        filtered[i] *= 2;\n                        filtered[i + 1] = 0;\n                        _this.score += filtered[i];\n                    }\n                    var compressed = filtered.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(compressed).concat((0, $227c6742e0ff6f82$export$71511d61b312f219)(Array(4 - compressed.length).fill(0)));\n                });\n                this.state = newState;\n                if (JSON.stringify(this.state) !== previousState) this.spawnCell();\n                this.changeBoard();\n                this.isGameWin();\n                this.isGameOver();\n                this.getScore();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                var previousState = JSON.stringify(this.state);\n                var newState = this.state.map(function(row, rowIndex) {\n                    var reversed = (0, $227c6742e0ff6f82$export$71511d61b312f219)(row).reverse();\n                    var filtered = reversed.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    var merged = Array(4).fill(false);\n                    for(var i = 0; i < filtered.length - 1; i++)if (filtered[i] === filtered[i + 1] && !merged[i] && !merged[i + 1]) {\n                        filtered[i] *= 2;\n                        filtered[i + 1] = 0;\n                        merged[i] = true;\n                        _this.score += filtered[i];\n                    }\n                    var compressed = filtered.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    var result = (0, $227c6742e0ff6f82$export$71511d61b312f219)(compressed).concat((0, $227c6742e0ff6f82$export$71511d61b312f219)(Array(4 - compressed.length).fill(0))).reverse();\n                    return result;\n                });\n                this.state = newState;\n                if (JSON.stringify(this.state) !== previousState) this.spawnCell();\n                this.changeBoard();\n                this.isGameWin();\n                this.isGameOver();\n                this.getScore();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this;\n                var previousState = JSON.stringify(this.state);\n                var newState = [\n                    0,\n                    1,\n                    2,\n                    3\n                ].map(function(col) {\n                    var column = _this.state.map(function(row) {\n                        return row[col];\n                    }).filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    for(var i = 0; i < column.length - 1; i++)if (column[i] === column[i + 1]) {\n                        column[i] *= 2;\n                        column[i + 1] = 0;\n                        _this.score += column[i];\n                    }\n                    var compressed = column.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(compressed).concat((0, $227c6742e0ff6f82$export$71511d61b312f219)(Array(4 - compressed.length).fill(0)));\n                });\n                this.state = [\n                    0,\n                    1,\n                    2,\n                    3\n                ].map(function(row) {\n                    return newState.map(function(col) {\n                        return col[row];\n                    });\n                });\n                if (JSON.stringify(this.state) !== previousState) this.spawnCell();\n                this.changeBoard();\n                this.isGameWin();\n                this.isGameOver();\n                this.getScore();\n            }\n        },\n        {\n            key: \"spawnCell\",\n            value: function spawnCell() {\n                var nullCells = [];\n                for(var i = 0; i < 4; i++){\n                    for(var j = 0; j < 4; j++)if (this.state[i][j] === 0) nullCells.push({\n                        x: i,\n                        y: j\n                    });\n                }\n                if (nullCells.length !== 0) {\n                    var randomCell = Math.floor(Math.random() * nullCells.length);\n                    var _nullCells_randomCell = nullCells[randomCell], x = _nullCells_randomCell.x, y = _nullCells_randomCell.y;\n                    this.state[x][y] = Math.random() < 0.9 ? 2 : 4;\n                }\n            }\n        },\n        {\n            key: \"changeBoard\",\n            value: function changeBoard() {\n                for(var row = 0; row < $3d28d7f1aac198f5$var$rows.length; row++){\n                    var rowCells = $3d28d7f1aac198f5$var$rows[row].querySelectorAll(\"td\");\n                    for(var i = 0; i < rowCells.length; i++){\n                        var value = this.state[row][i];\n                        if (value !== 0) {\n                            rowCells[i].textContent = value;\n                            rowCells[i].className = \"field-cell field-cell--\".concat(value);\n                        } else {\n                            rowCells[i].textContent = \"\";\n                            rowCells[i].className = \"field-cell\";\n                        }\n                    }\n                }\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\n\"use strict\";\nvar $197cd56b15c33885$var$board = [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n];\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var game = new (0, (/*@__PURE__*/$parcel$interopDefault($3d28d7f1aac198f5$exports)))($197cd56b15c33885$var$board);\n    var startButton = document.querySelector(\".start\");\n    startButton.addEventListener(\"click\", function() {\n        game.start();\n    });\n});\n\n})();\n//# sourceMappingURL=index.e74d16ee.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\n// const Game = require('../modules/Game.class');\n// const game = new Game();\n\n// Write your code here\n\nimport Game from '../modules/Game.class';\n\nconst board = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const game = new Game(board);\n\n  const startButton = document.querySelector('.start');\n\n  startButton.addEventListener('click', () => {\n    game.start();\n  });\n});\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\n\nconst table = document.querySelector('.game-field');\nconst tBody = table.querySelector('tbody');\nconst rows = tBody.querySelectorAll('tr');\nconst startButton = document.querySelector('.start');\nconst gameScore = document.querySelector('.game-score');\nconst restartButton = document.querySelector('.restart');\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\n\nclass Game {\n  constructor(initialState = []) {\n    this.state = initialState;\n    this.score = 0;\n    this.status = 'start';\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  getScore() {\n    gameScore.textContent = this.score;\n\n    return this.score;\n  }\n\n  resetBoard() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        this.state[i][j] = 0;\n      }\n    }\n    this.score = 0;\n  }\n\n  start() {\n    this.status = 'inProcess';\n    this.resetBoard();\n    this.spawnCell();\n    this.spawnCell();\n    this.changeBoard();\n    document.removeEventListener('keydown', this.handleKeyPress);\n    document.addEventListener('keydown', this.handleKeyPress);\n    startButton.className = 'button restart';\n    startButton.textContent = 'Restart';\n    startMessage.remove();\n    winMessage.className = 'message message-win hidden';\n    loseMessage.className = 'message message-min hidden';\n  }\n\n  restart() {\n    restartButton.removeEventListener('click', this.handleRestart);\n\n    this.handleRestart = () => {\n      this.resetBoard();\n      this.status = 'start';\n      winMessage.classList.add('hidden');\n      loseMessage.classList.add('hidden');\n      this.start();\n    };\n    restartButton.addEventListener('click', this.handleRestart);\n  }\n\n  isGameWin() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.state[i][j] === 2048) {\n          this.status = 'win';\n          winMessage.className = 'message message-win';\n        }\n      }\n    }\n  }\n\n  isGameOver() {\n    let ansver = true;\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.state[i][j] === 0) {\n          ansver = false;\n        }\n\n        if (\n          (i < 3 && this.state[i][j] === this.state[i + 1][j]) ||\n          (j < 3 && this.state[i][j] === this.state[i][j + 1])\n        ) {\n          ansver = false;\n        }\n      }\n    }\n\n    if (ansver === true) {\n      this.status = 'lose';\n      loseMessage.className = 'message message-lose';\n    }\n  }\n\n  handleKeyPress(e) {\n    if (this.status === 'inProcess') {\n      switch (e.key) {\n        case 'ArrowUp':\n          this.moveUp();\n          break;\n        case 'ArrowDown':\n          this.moveDown();\n          break;\n        case 'ArrowLeft':\n          this.moveLeft();\n          break;\n        case 'ArrowRight':\n          this.moveRight();\n          break;\n      }\n    }\n  }\n\n  moveDown() {\n    const previousState = JSON.stringify(this.state);\n\n    const newState = [0, 1, 2, 3].map((col) => {\n      const column = this.state\n        .map((row) => row[col])\n        .filter((cell) => cell !== 0);\n\n      for (let i = column.length - 1; i > 0; i--) {\n        if (column[i] === column[i - 1]) {\n          column[i] *= 2;\n          column[i - 1] = 0;\n          this.score += column[i];\n        }\n      }\n\n      const compressed = column.filter((cell) => cell !== 0);\n\n      return [...Array(4 - compressed.length).fill(0), ...compressed];\n    });\n\n    this.state = [0, 1, 2, 3].map((row) => newState.map((col) => col[row]));\n\n    if (JSON.stringify(this.state) !== previousState) {\n      this.spawnCell();\n    }\n    this.changeBoard();\n    this.isGameWin();\n    this.isGameOver();\n    this.getScore();\n  }\n\n  moveLeft() {\n    const previousState = JSON.stringify(this.state);\n\n    const newState = this.state.map((row) => {\n      const filtered = row.filter((cell) => cell !== 0);\n\n      for (let i = 0; i < filtered.length - 1; i++) {\n        if (filtered[i] === filtered[i + 1]) {\n          filtered[i] *= 2;\n          filtered[i + 1] = 0;\n          this.score += filtered[i];\n        }\n      }\n\n      const compressed = filtered.filter((cell) => cell !== 0);\n\n      return [...compressed, ...Array(4 - compressed.length).fill(0)];\n    });\n\n    this.state = newState;\n\n    if (JSON.stringify(this.state) !== previousState) {\n      this.spawnCell();\n    }\n    this.changeBoard();\n    this.isGameWin();\n    this.isGameOver();\n    this.getScore();\n  }\n\n  moveRight() {\n    const previousState = JSON.stringify(this.state);\n    const newState = this.state.map((row, rowIndex) => {\n      const reversed = [...row].reverse();\n\n      const filtered = reversed.filter((cell) => cell !== 0);\n\n      const merged = Array(4).fill(false);\n\n      for (let i = 0; i < filtered.length - 1; i++) {\n        if (filtered[i] === filtered[i + 1] && !merged[i] && !merged[i + 1]) {\n          filtered[i] *= 2;\n          filtered[i + 1] = 0;\n          merged[i] = true;\n          this.score += filtered[i];\n        }\n      }\n\n      const compressed = filtered.filter((cell) => cell !== 0);\n\n      const result = [\n        ...compressed,\n        ...Array(4 - compressed.length).fill(0),\n      ].reverse();\n\n      return result;\n    });\n\n    this.state = newState;\n\n    if (JSON.stringify(this.state) !== previousState) {\n      this.spawnCell();\n    } else {\n    }\n\n    this.changeBoard();\n    this.isGameWin();\n    this.isGameOver();\n    this.getScore();\n  }\n\n  moveUp() {\n    const previousState = JSON.stringify(this.state);\n\n    const newState = [0, 1, 2, 3].map((col) => {\n      const column = this.state\n        .map((row) => row[col])\n        .filter((cell) => cell !== 0);\n\n      for (let i = 0; i < column.length - 1; i++) {\n        if (column[i] === column[i + 1]) {\n          column[i] *= 2;\n          column[i + 1] = 0;\n          this.score += column[i];\n        }\n      }\n\n      const compressed = column.filter((cell) => cell !== 0);\n\n      return [...compressed, ...Array(4 - compressed.length).fill(0)];\n    });\n\n    this.state = [0, 1, 2, 3].map((row) => newState.map((col) => col[row]));\n\n    if (JSON.stringify(this.state) !== previousState) {\n      this.spawnCell();\n    }\n    this.changeBoard();\n    this.isGameWin();\n    this.isGameOver();\n    this.getScore();\n  }\n\n  spawnCell() {\n    const nullCells = [];\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.state[i][j] === 0) {\n          nullCells.push({ x: i, y: j });\n        }\n      }\n    }\n\n    if (nullCells.length !== 0) {\n      const randomCell = Math.floor(Math.random() * nullCells.length);\n      const { x, y } = nullCells[randomCell];\n\n      this.state[x][y] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  changeBoard() {\n    for (let row = 0; row < rows.length; row++) {\n      const rowCells = rows[row].querySelectorAll('td');\n\n      for (let i = 0; i < rowCells.length; i++) {\n        const value = this.state[row][i];\n\n        if (value !== 0) {\n          rowCells[i].textContent = value;\n          rowCells[i].className = `field-cell field-cell--${value}`;\n        } else {\n          rowCells[i].textContent = '';\n          rowCells[i].className = 'field-cell';\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$3d28d7f1aac198f5$exports","$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$3d28d7f1aac198f5$var$rows","$3d28d7f1aac198f5$var$tBody","$3d28d7f1aac198f5$var$table","document","querySelector","querySelectorAll","$3d28d7f1aac198f5$var$startButton","$3d28d7f1aac198f5$var$gameScore","$3d28d7f1aac198f5$var$restartButton","$3d28d7f1aac198f5$var$startMessage","$3d28d7f1aac198f5$var$loseMessage","$3d28d7f1aac198f5$var$winMessage","protoProps","Game","initialState","arguments","instance","Constructor","state","score","status","handleKeyPress","bind","key","value","textContent","j","resetBoard","spawnCell","changeBoard","removeEventListener","addEventListener","className","remove","_this","handleRestart","classList","add","start","ansver","e","moveUp","moveDown","moveLeft","moveRight","previousState","JSON","stringify","newState","map","col","column","row","filter","cell","compressed","fill","concat","isGameWin","isGameOver","getScore","filtered","rowIndex","reversed","reverse","merged","nullCells","push","x","y","randomCell","Math","floor","random","_nullCells_randomCell","rowCells","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$board","a","game","__esModule","default","startButton"],"version":3,"file":"index.e74d16ee.js.map"}